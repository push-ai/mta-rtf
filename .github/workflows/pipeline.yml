name: MTA GTFS Pipeline

on:
  schedule:
    - cron: "*/5 * * * *"
    - cron: "0 4 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [realtime, static]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Setup venv and install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r dlt_mta_rtf/requirements.txt

      - name: Write GCP SA key to file
        run: |
          echo "$GCP_SA_KEY_JSON" > sa.json
        env:
          GCP_SA_KEY_JSON: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Run pipeline
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa.json
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          SOURCES__MTA_GTFS_STATIC__ZIP_URL: ${{ secrets.SOURCES__MTA_GTFS_STATIC__ZIP_URL }}
          PIPELINE_FEEDS: ${{ secrets.PIPELINE_FEEDS }}
        run: |
          set -euo pipefail
          source .venv/bin/activate
          if [ "${{ matrix.mode }}" = "static" ]; then
            python -c "from dlt_mta_rtf import load_mta_pipeline as p; p.run(full_static=True)"
          else
            python -c "import os; from dlt_mta_rtf import load_mta_pipeline as p; feeds=os.environ.get('PIPELINE_FEEDS'); feeds=feeds.split(',') if feeds else None; p.run(full_static=False, feeds=feeds)"
          fi
